{"ast":null,"code":"import videojs from 'video.js';\nimport \"video.js/dist/video-js.min.css\";\nimport lang_zhcn from \"video.js/dist/lang/zh-CN.json\";\nimport _axios from '@/axios/myaxios';\nvideojs.addLanguage('zh-CN', lang_zhcn);\nconst options = {\n  watch: {\n    videoUrl(newUrl, oldUrl) {\n      if (newUrl != oldUrl) {\n        videojs('my-player').dispose();\n        var video = document.querySelector(\".xtVideo\");\n        video.innerHTML = \"<video id='my-player' class='video-js' controls preload='auto'><source /></video>\";\n      }\n      this.restartVideoPlayer();\n    }\n  },\n  data() {\n    return {\n      mediaId: 0,\n      media: {},\n      videoUrl: \"//vjs.zencdn.net/v/oceans.mp4\",\n      coverUrl: \"//vjs.zencdn.net/v/oceans.png\"\n    };\n  },\n  methods: {\n    setMedia() {\n      this.$nextTick(() => {\n        let options = {\n          autoplay: 'muted',\n          width: 791,\n          height: 445,\n          language: 'zh-CN',\n          playbackRates: [0.50, 1.00, 1.25, 1.50, 2.00],\n          poster: this.coverUrl,\n          sources: [{\n            src: this.videoUrl,\n            type: \"video/mp4\"\n          }]\n        };\n        videojs('my-player', options, function () {});\n      });\n    },\n    getCurrentTime() {\n      document.addEventListener('DOMContentLoaded', function () {\n        var player = videojs('my-player');\n        function formatTime(seconds) {\n          var hours = Math.floor(seconds / 3600);\n          var minutes = Math.floor(seconds % 3600 / 60);\n          var remainingSeconds = Math.floor(seconds % 60);\n          hours = hours < 10 ? '0' + hours : hours;\n          minutes = minutes < 10 ? '0' + minutes : minutes;\n          remainingSeconds = remainingSeconds < 10 ? '0' + remainingSeconds : remainingSeconds;\n          return hours + ':' + minutes + ':' + remainingSeconds;\n        }\n        player.on('timeupdate', function () {\n          var currentTime = player.currentTime();\n          var formattedTime = formatTime(currentTime);\n          document.getElementById('current-time').innerText = formattedTime;\n        });\n      });\n    },\n    getMedia() {\n      _axios.get(\"/teachplan-media/detail/\" + this.mediaId).then(resp => {\n        this.media = resp.data.data;\n        this.videoUrl = this.media.videoUrl;\n        this.coverUrl = this.media.coverUrl;\n      });\n    },\n    restartVideoPlayer() {\n      this.$nextTick(() => {\n        this.setMedia();\n      });\n    }\n  },\n  mounted() {\n    this.mediaId = this.$route.params.vid;\n    console.log(this.mediaId);\n    this.getCurrentTime();\n    this.getMedia();\n    this.setMedia();\n  },\n  updated() {}\n};\nexport default options;","map":{"version":3,"names":["videojs","lang_zhcn","_axios","addLanguage","options","watch","videoUrl","newUrl","oldUrl","dispose","video","document","querySelector","innerHTML","restartVideoPlayer","data","mediaId","media","coverUrl","methods","setMedia","$nextTick","autoplay","width","height","language","playbackRates","poster","sources","src","type","getCurrentTime","addEventListener","player","formatTime","seconds","hours","Math","floor","minutes","remainingSeconds","on","currentTime","formattedTime","getElementById","innerText","getMedia","get","then","resp","mounted","$route","params","vid","console","log","updated"],"sources":["src/views/MediaView.vue"],"sourcesContent":["<template>\r\n    <div data-v-648695f9 class=\"lesson_rightcon\" :key=\"\">\r\n        <div data-v-648695f9 data-v-6e8ee066 class=\"lesson_right content_right\">\r\n            <div data-v-6e8ee066 class=\"hover_overflow\" style=\"height:100%\">\r\n                <div data-v-6e8ee066 style=\"width: 791px; padding-bottom: 70px;\">\r\n                    <p data-v-6e8ee066 class=\"title\">课程简介</p>\r\n                    <div data-v-6e8ee066 class=\"list lesson_video notshow videoshow\">\r\n                        <p data-v-6e8ee066 class=\"t1\">\r\n                            <i data-v-6e8ee066></i>\r\n                            视频\r\n                        </p>\r\n                        <div data-v-6e8ee066>\r\n                            <div data-v-6e8ee066>\r\n                                <div data-v-6e8ee066 data-v-1dddb610 class=\"xtVideo\"\r\n                                    style=\"width: 791px; height: 445px;\">\r\n                                    <video id=\"my-player\" class=\"video-js\" controls preload=\"auto\"\r\n                                        >\r\n                                        <source />\r\n                                    </video>\r\n                                    <span data-v-6e8ee066 style=\"color: black;\" id=\"current-time\">00:00</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div data-v-6e8ee066 data-v-13a92561 class=\"control\"></div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport videojs from 'video.js'\r\nimport \"video.js/dist/video-js.min.css\"\r\nimport lang_zhcn from \"video.js/dist/lang/zh-CN.json\"\r\nimport _axios from '@/axios/myaxios';\r\nvideojs.addLanguage('zh-CN', lang_zhcn);\r\n\r\n\r\nconst options = {\r\n    watch:{\r\n        videoUrl(newUrl, oldUrl){\r\n            if(newUrl != oldUrl){\r\n                videojs('my-player').dispose()\r\n                var video = document.querySelector(\".xtVideo\")\r\n                video.innerHTML = \"<video id='my-player' class='video-js' controls preload='auto'><source /></video>\" \r\n            }\r\n            this.restartVideoPlayer();\r\n        },\r\n        \r\n\r\n    },\r\n    data () {\r\n        return {\r\n            mediaId:0,\r\n            media:{},\r\n            videoUrl:\"//vjs.zencdn.net/v/oceans.mp4\",\r\n            coverUrl:\"//vjs.zencdn.net/v/oceans.png\",\r\n            \r\n        }\r\n    },\r\n    methods: {\r\n        setMedia(){\r\n            this.$nextTick(() => {\r\n                let options = {\r\n                    autoplay: 'muted',\r\n                    width: 791,\r\n                    height: 445,\r\n                    language: 'zh-CN',\r\n                    playbackRates: [0.50, 1.00, 1.25, 1.50, 2.00],\r\n                    poster: this.coverUrl,\r\n                    sources: [\r\n                        {\r\n                            src: this.videoUrl,\r\n                            type: \"video/mp4\"\r\n                        }\r\n                    ]\r\n                }\r\n                videojs('my-player', options, function () {\r\n                });\r\n            })\r\n        },\r\n        getCurrentTime(){\r\n            document.addEventListener('DOMContentLoaded', function () {\r\n                var player = videojs('my-player');\r\n\r\n                function formatTime(seconds) {\r\n                    var hours = Math.floor(seconds / 3600);\r\n                    var minutes = Math.floor((seconds % 3600) / 60);\r\n                    var remainingSeconds = Math.floor(seconds % 60);\r\n                    hours = hours < 10 ? '0' + hours : hours;\r\n                    minutes = minutes < 10 ? '0' + minutes : minutes;\r\n                    remainingSeconds = remainingSeconds < 10 ? '0' + remainingSeconds : remainingSeconds;\r\n                    return hours + ':' + minutes + ':' + remainingSeconds;\r\n                }\r\n                player.on('timeupdate', function () {\r\n                    var currentTime = player.currentTime();\r\n                    var formattedTime = formatTime(currentTime);\r\n                    document.getElementById('current-time').innerText = formattedTime;\r\n                });\r\n            });\r\n        },\r\n        getMedia(){\r\n            _axios.get(\"/teachplan-media/detail/\"+this.mediaId).then( resp => {\r\n                this.media = resp.data.data\r\n                this.videoUrl = this.media.videoUrl\r\n                this.coverUrl = this.media.coverUrl\r\n            })\r\n        },\r\n        restartVideoPlayer() {\r\n            this.$nextTick(() => {\r\n                this.setMedia();\r\n            })\r\n        },\r\n    },\r\n    mounted() {\r\n        this.mediaId = this.$route.params.vid;\r\n        console.log(this.mediaId)\r\n        this.getCurrentTime()\r\n        this.getMedia()\r\n        this.setMedia()\r\n    },\r\n    updated() {\r\n        \r\n    },\r\n}\r\nexport default options;\r\n</script>\r\n<style>\r\n\r\n</style>\r\n\r\n<style scoped>\r\n.lesson_rightcon[data-v-648695f9] {\r\n    height: 100%;\r\n    overflow: hidden;\r\n    position: relative;\r\n    width: 100%;\r\n    z-index: 100;\r\n}\r\n\r\n.lesson_right[data-v-6e8ee066] {\r\n    height: calc(-112px + 100vh);\r\n    min-height: 400px;\r\n    padding-bottom: 50px;\r\n    padding-left: 24px;\r\n    position: relative;\r\n}\r\n\r\n.hover_overflow[data-v-6e8ee066] {\r\n    overflow: hidden;\r\n}\r\n\r\n.lesson_right .title[data-v-6e8ee066] {\r\n    color: rgb(51, 51, 51);\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n    letter-spacing: 0px;\r\n    margin-bottom: 20px;\r\n}\r\nbody[data-v-6e8ee066], dd[data-v-6e8ee066], dl[data-v-6e8ee066], fieldset[data-v-6e8ee066], h1[data-v-6e8ee066], h2[data-v-6e8ee066], h3[data-v-6e8ee066], h4[data-v-6e8ee066], h5[data-v-6e8ee066], h6[data-v-6e8ee066], input[data-v-6e8ee066], legend[data-v-6e8ee066], ol[data-v-6e8ee066], option[data-v-6e8ee066], p[data-v-6e8ee066], td[data-v-6e8ee066], textarea[data-v-6e8ee066], ul[data-v-6e8ee066] {\r\n    margin: 0px;\r\n    padding: 0px;\r\n}\r\n\r\n.lesson_right .list[data-v-6e8ee066] {\r\n    letter-spacing: 0px;\r\n    margin-bottom: 40px;\r\n}\r\n.lesson_right .lesson_video[data-v-6e8ee066] {\r\n    position: relative;\r\n}\r\n.videoshow[data-v-6e8ee066] {\r\n    height: auto;\r\n    opacity: 1;\r\n}\r\n\r\n.notshow[data-v-6e8ee066] {\r\n/*     height: 0px;\r\n    opacity: 0; */\r\n    overflow: hidden;\r\n}\r\n\r\n\r\n.lesson_right .list .t1[data-v-6e8ee066] {\r\n    color: rgb(51, 51, 51);\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    margin: 0px 0px 8px;\r\n}\r\n\r\n.lesson_right .list .t1 i[data-v-6e8ee066] {\r\n    background: rgb(51, 51, 51);\r\n    display: inline-block;\r\n    height: 13px;\r\n    margin-right: 8px;\r\n    position: relative;\r\n    top: -4px;\r\n    vertical-align: bottom;\r\n    width: 3px;\r\n}\r\nbutton, i, input, select, textarea {\r\n    font-family: -apple-system, SF UI Text, Arial, PingFang SC, Hiragino Sans GB, Microsoft YaHei, WenQuanYi Micro Hei, sans-serif;\r\n    line-height: 1em;\r\n}\r\n\r\n.xtVideo[data-v-1dddb610] {\r\n    background: rgb(0, 0, 0);\r\n    position: relative;\r\n}\r\n\r\n</style>"],"mappings":"AA+BA,OAAAA,OAAA;AACA;AACA,OAAAC,SAAA;AACA,OAAAC,MAAA;AACAF,OAAA,CAAAG,WAAA,UAAAF,SAAA;AAGA,MAAAG,OAAA;EACAC,KAAA;IACAC,SAAAC,MAAA,EAAAC,MAAA;MACA,IAAAD,MAAA,IAAAC,MAAA;QACAR,OAAA,cAAAS,OAAA;QACA,IAAAC,KAAA,GAAAC,QAAA,CAAAC,aAAA;QACAF,KAAA,CAAAG,SAAA;MACA;MACA,KAAAC,kBAAA;IACA;EAGA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,KAAA;MACAX,QAAA;MACAY,QAAA;IAEA;EACA;EACAC,OAAA;IACAC,SAAA;MACA,KAAAC,SAAA;QACA,IAAAjB,OAAA;UACAkB,QAAA;UACAC,KAAA;UACAC,MAAA;UACAC,QAAA;UACAC,aAAA;UACAC,MAAA,OAAAT,QAAA;UACAU,OAAA,GACA;YACAC,GAAA,OAAAvB,QAAA;YACAwB,IAAA;UACA;QAEA;QACA9B,OAAA,cAAAI,OAAA,eACA;MACA;IACA;IACA2B,eAAA;MACApB,QAAA,CAAAqB,gBAAA;QACA,IAAAC,MAAA,GAAAjC,OAAA;QAEA,SAAAkC,WAAAC,OAAA;UACA,IAAAC,KAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAH,OAAA;UACA,IAAAI,OAAA,GAAAF,IAAA,CAAAC,KAAA,CAAAH,OAAA;UACA,IAAAK,gBAAA,GAAAH,IAAA,CAAAC,KAAA,CAAAH,OAAA;UACAC,KAAA,GAAAA,KAAA,cAAAA,KAAA,GAAAA,KAAA;UACAG,OAAA,GAAAA,OAAA,cAAAA,OAAA,GAAAA,OAAA;UACAC,gBAAA,GAAAA,gBAAA,cAAAA,gBAAA,GAAAA,gBAAA;UACA,OAAAJ,KAAA,SAAAG,OAAA,SAAAC,gBAAA;QACA;QACAP,MAAA,CAAAQ,EAAA;UACA,IAAAC,WAAA,GAAAT,MAAA,CAAAS,WAAA;UACA,IAAAC,aAAA,GAAAT,UAAA,CAAAQ,WAAA;UACA/B,QAAA,CAAAiC,cAAA,iBAAAC,SAAA,GAAAF,aAAA;QACA;MACA;IACA;IACAG,SAAA;MACA5C,MAAA,CAAA6C,GAAA,mCAAA/B,OAAA,EAAAgC,IAAA,CAAAC,IAAA;QACA,KAAAhC,KAAA,GAAAgC,IAAA,CAAAlC,IAAA,CAAAA,IAAA;QACA,KAAAT,QAAA,QAAAW,KAAA,CAAAX,QAAA;QACA,KAAAY,QAAA,QAAAD,KAAA,CAAAC,QAAA;MACA;IACA;IACAJ,mBAAA;MACA,KAAAO,SAAA;QACA,KAAAD,QAAA;MACA;IACA;EACA;EACA8B,QAAA;IACA,KAAAlC,OAAA,QAAAmC,MAAA,CAAAC,MAAA,CAAAC,GAAA;IACAC,OAAA,CAAAC,GAAA,MAAAvC,OAAA;IACA,KAAAe,cAAA;IACA,KAAAe,QAAA;IACA,KAAA1B,QAAA;EACA;EACAoC,QAAA,GAEA;AACA;AACA,eAAApD,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}